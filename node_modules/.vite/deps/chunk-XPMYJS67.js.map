{
  "version": 3,
  "sources": ["../../bootstrap-vue-next/src/composables/useAriaInvalid.ts", "../../bootstrap-vue-next/src/composables/useStateClass.ts", "../../bootstrap-vue-next/src/utils/normalizeInput.ts", "../../bootstrap-vue-next/src/utils/debounce.ts", "../../bootstrap-vue-next/src/composables/useFormInput.ts", "../../bootstrap-vue-next/src/components/BFormInput/BFormInput.vue"],
  "sourcesContent": ["import type {AriaInvalid} from '../types/AriaInvalid'\nimport {computed, type MaybeRefOrGetter, toValue} from 'vue'\n\nexport const useAriaInvalid = (\n  ariaInvalid: MaybeRefOrGetter<AriaInvalid | undefined>,\n  state: MaybeRefOrGetter<boolean | null | undefined>\n) =>\n  computed(() => {\n    const resolvedAriaInvalid = toValue(ariaInvalid)\n    const resolvedState = toValue(state)\n\n    const resolvedAriaInvalidValue =\n      resolvedAriaInvalid === true\n        ? 'true'\n        : typeof resolvedAriaInvalid === 'string'\n          ? resolvedAriaInvalid\n          : resolvedState === false\n            ? 'true'\n            : resolvedAriaInvalid === false\n              ? 'false'\n              : undefined\n\n    return resolvedAriaInvalidValue\n  })\n", "import {computed, type MaybeRefOrGetter, toValue} from 'vue'\nimport type {ValidationState} from '../types/CommonTypes'\n\nexport const useStateClass = (value: MaybeRefOrGetter<ValidationState>) =>\n  computed(() => {\n    const resolvedValue = toValue(value)\n\n    return resolvedValue === true ? 'is-valid' : resolvedValue === false ? 'is-invalid' : null\n  })\n", "import type {Numberish} from '../types/CommonTypes'\n\nexport const normalizeInput = (\n  v: Numberish | null,\n  modelModifiers: Record<'number' | 'lazy' | 'trim', true | undefined>\n) => {\n  if (v === null) return\n  let update = v\n  if (modelModifiers.number && typeof update === 'string' && update !== '') {\n    const parsed = Number.parseFloat(update)\n    update = Number.isNaN(parsed) ? update : parsed\n  }\n  return update\n}\n", "import {type MaybeRefOrGetter, toValue} from 'vue'\nimport type {\n  AnyFn,\n  ArgumentsType,\n  DebounceFilterOptions,\n  EventFilter,\n  FunctionArgs,\n  UseDebounceFnReturn,\n} from '@vueuse/core'\n\nexport const noop = () => {}\n\n/**\n * @internal\n */\nfunction createFilterWrapper<T extends AnyFn>(filter: EventFilter & {cancel: () => void}, fn: T) {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  function wrapper(this: any, ...args: ArgumentsType<T>) {\n    return new Promise<Awaited<ReturnType<T>>>((resolve, reject) => {\n      // make sure it's a promise\n      Promise.resolve(filter(() => fn.apply(this, args), {fn, thisArg: this, args}))\n        .then(resolve)\n        .catch(reject)\n    })\n  }\n\n  // https://github.com/vueuse/vueuse/pull/4561\n  wrapper.cancel = filter.cancel\n  return wrapper\n}\n\n/**\n * Create an EventFilter that debounce the events\n */\nfunction debounceFilter(ms: MaybeRefOrGetter<number>, options: DebounceFilterOptions = {}) {\n  let timer: ReturnType<typeof setTimeout> | undefined\n  let maxTimer: ReturnType<typeof setTimeout> | undefined | null\n  let lastRejector: AnyFn = noop\n\n  const _clearTimeout = (timer: ReturnType<typeof setTimeout>) => {\n    clearTimeout(timer)\n    lastRejector()\n    lastRejector = noop\n  }\n\n  let lastInvoker: () => void\n\n  const filter: EventFilter & {cancel: () => void} = (invoke) => {\n    const duration = toValue(ms)\n    const maxDuration = toValue(options.maxWait)\n\n    if (timer) _clearTimeout(timer)\n\n    if (duration <= 0 || (maxDuration !== undefined && maxDuration <= 0)) {\n      if (maxTimer) {\n        _clearTimeout(maxTimer)\n        maxTimer = null\n      }\n      return Promise.resolve(invoke())\n    }\n\n    return new Promise((resolve, reject) => {\n      lastRejector = options.rejectOnCancel ? reject : resolve\n      lastInvoker = invoke\n      // Create the maxTimer. Clears the regular timer on invoke\n      if (maxDuration && !maxTimer) {\n        maxTimer = setTimeout(() => {\n          if (timer) _clearTimeout(timer)\n          maxTimer = null\n          resolve(lastInvoker())\n        }, maxDuration)\n      }\n\n      // Create the regular timer. Clears the max timer on invoke\n      timer = setTimeout(() => {\n        if (maxTimer) _clearTimeout(maxTimer)\n        maxTimer = null\n        resolve(invoke())\n      }, duration)\n    })\n  }\n\n  // https://github.com/vueuse/vueuse/pull/4561\n  filter.cancel = () => {\n    if (timer) _clearTimeout(timer)\n    if (maxTimer) _clearTimeout(maxTimer)\n    maxTimer = null\n  }\n\n  return filter\n}\n\n/**\n * Debounce execution of a function.\n *\n * @see https://vueuse.org/useDebounceFn\n * @param  fn          A function to be executed after delay milliseconds debounced.\n * @param  ms          A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  options     Options\n *\n * @return A new, debounce, function, provided with a cancel method.\n */\nexport function useDebounceFn<T extends FunctionArgs>(\n  fn: T,\n  ms: MaybeRefOrGetter<number> = 200,\n  options: DebounceFilterOptions = {}\n): UseDebounceFnReturn<T> & {cancel: () => void} {\n  return createFilterWrapper(debounceFilter(ms, options), fn)\n}\n", "import type {Numberish} from '../types/CommonTypes'\nimport {\n  computed,\n  inject,\n  nextTick,\n  onActivated,\n  onMounted,\n  ref,\n  type Ref,\n  type ShallowRef,\n} from 'vue'\nimport {useAriaInvalid} from './useAriaInvalid'\nimport {useId} from './useId'\nimport {useFocus, useToNumber} from '@vueuse/core'\nimport type {CommonInputProps} from '../types/FormCommonInputProps'\nimport {formGroupPluginKey} from '../utils/keys'\nimport {useDebounceFn} from '../utils/debounce'\nimport {useStateClass} from './useStateClass'\n\nexport const useFormInput = (\n  props: Readonly<CommonInputProps>,\n  input:\n    | Readonly<ShallowRef<HTMLInputElement | null>>\n    | Readonly<ShallowRef<HTMLTextAreaElement | null>>,\n  modelValue: Ref<Numberish | null>,\n  modelModifiers: Record<'number' | 'lazy' | 'trim', true | undefined>\n) => {\n  const forceUpdateKey = ref(0)\n\n  const computedId = useId(() => props.id, 'input')\n  const debounceNumber = useToNumber(() => props.debounce ?? 0, {nanToZero: true})\n  const debounceMaxWaitNumber = useToNumber(() => props.debounceMaxWait ?? NaN)\n\n  // This automatically adds the appropriate \"for\" attribute to a BFormGroup label\n  const formGroupData = inject(formGroupPluginKey, null)?.(computedId)\n  const computedState = computed(() =>\n    props.state !== undefined ? props.state : (formGroupData?.state.value ?? null)\n  )\n  const computedAriaInvalid = useAriaInvalid(() => props.ariaInvalid, computedState)\n  const stateClass = useStateClass(computedState)\n\n  const internalUpdateModelValue = useDebounceFn(\n    (value: Numberish) => {\n      modelValue.value = value\n    },\n    () => (modelModifiers.lazy === true ? 0 : debounceNumber.value),\n    {maxWait: () => (modelModifiers.lazy === true ? NaN : debounceMaxWaitNumber.value)}\n  )\n\n  const updateModelValue = (value: Numberish, force = false, immediate = false) => {\n    if (modelModifiers.lazy === true && force === false) return\n    if (immediate) {\n      modelValue.value = value\n    } else {\n      internalUpdateModelValue(value)\n    }\n  }\n\n  const {focused} = useFocus(input, {\n    initialValue: props.autofocus,\n  })\n\n  const _formatValue = (value: string, evt: Readonly<Event>, force = false) => {\n    if (props.formatter !== undefined && (!props.lazyFormatter || force)) {\n      return props.formatter(value, evt)\n    }\n    return value\n  }\n  onMounted(() => {\n    if (input.value) {\n      input.value.value = modelValue.value?.toString() ?? ''\n    }\n  })\n\n  onActivated(() => {\n    nextTick(() => {\n      if (props.autofocus) {\n        focused.value = true\n      }\n    })\n  })\n\n  const onInput = (evt: Readonly<Event>) => {\n    const {value} = evt.target as HTMLInputElement\n    const formattedValue = _formatValue(value, evt)\n    if (evt.defaultPrevented) {\n      evt.preventDefault()\n      return\n    }\n\n    const nextModel = formattedValue\n\n    updateModelValue(nextModel)\n  }\n\n  const onChange = (evt: Readonly<Event>) => {\n    const {value} = evt.target as HTMLInputElement\n    const formattedValue = _formatValue(value, evt)\n    if (evt.defaultPrevented) {\n      evt.preventDefault()\n      return\n    }\n\n    const nextModel = formattedValue\n    if (modelValue.value !== nextModel) {\n      updateModelValue(formattedValue, true)\n    }\n  }\n\n  const onBlur = (evt: Readonly<FocusEvent>) => {\n    if (\n      !modelModifiers.lazy &&\n      !props.lazyFormatter &&\n      !modelModifiers.trim &&\n      debounceNumber.value <= 0\n    )\n      return\n\n    const {value} = evt.target as HTMLInputElement\n    const formattedValue = _formatValue(value, evt, true)\n\n    const nextModel = modelModifiers.trim ? formattedValue.trim() : formattedValue\n    const needsForceUpdate = nextModel.length !== formattedValue.length\n    // Cancel before modelValue.value comparison and update\n    internalUpdateModelValue.cancel()\n    if (modelValue.value !== nextModel) {\n      updateModelValue(formattedValue, true, true)\n    }\n    if (modelModifiers.trim && needsForceUpdate) {\n      // The value is trimmed but there would still exist some white space\n      // So, force update the value. You need to bind this to :key on the input element\n      forceUpdateKey.value = forceUpdateKey.value + 1\n    }\n  }\n\n  const focus = () => {\n    if (!props.disabled) {\n      focused.value = true\n    }\n  }\n\n  const blur = () => {\n    if (!props.disabled) {\n      focused.value = false\n    }\n  }\n\n  return {\n    input,\n    computedId,\n    computedAriaInvalid,\n    onInput,\n    onChange,\n    onBlur,\n    focus,\n    blur,\n    forceUpdateKey,\n    stateClass,\n  }\n}\n", "<template>\n  <input\n    :id=\"computedId\"\n    ref=\"_input\"\n    :key=\"forceUpdateKey\"\n    :value=\"modelValue\"\n    :class=\"computedClasses\"\n    :name=\"props.name || undefined\"\n    :form=\"props.form || undefined\"\n    :type=\"props.type\"\n    :disabled=\"props.disabled\"\n    :placeholder=\"props.placeholder\"\n    :required=\"props.required || undefined\"\n    :autocomplete=\"props.autocomplete || undefined\"\n    :readonly=\"props.readonly || props.plaintext\"\n    :min=\"props.min\"\n    :max=\"props.max\"\n    :step=\"props.step\"\n    :list=\"props.type !== 'password' ? props.list : undefined\"\n    :aria-required=\"props.required || undefined\"\n    :aria-invalid=\"computedAriaInvalid\"\n    @input=\"onInput\"\n    @change=\"onChange\"\n    @blur=\"onBlur\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, useTemplateRef} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {normalizeInput} from '../../utils/normalizeInput'\nimport type {BFormInputProps} from '../../types/ComponentProps'\nimport {useFormInput} from '../../composables/useFormInput'\n\nconst _props = withDefaults(defineProps<Omit<BFormInputProps, 'modelValue'>>(), {\n  max: undefined,\n  min: undefined,\n  step: undefined,\n  type: 'text',\n  // CommonInputProps\n  ariaInvalid: undefined,\n  autocomplete: undefined,\n  autofocus: false,\n  debounce: 0,\n  debounceMaxWait: NaN,\n  disabled: false,\n  form: undefined,\n  formatter: undefined,\n  id: undefined,\n  lazyFormatter: false,\n  list: undefined,\n  modelValue: '',\n  name: undefined,\n  placeholder: undefined,\n  plaintext: false,\n  readonly: false,\n  required: false,\n  size: undefined,\n  state: undefined,\n  // End CommonInputProps\n})\nconst props = useDefaults(_props, 'BFormInput')\n\nconst [modelValue, modelModifiers] = defineModel<\n  Exclude<BFormInputProps['modelValue'], undefined>,\n  'trim' | 'lazy' | 'number'\n>({\n  default: '',\n  set: (v) => normalizeInput(v, modelModifiers),\n})\n\nconst input = useTemplateRef<HTMLInputElement>('_input')\n\nconst {\n  computedId,\n  computedAriaInvalid,\n  onInput,\n  onChange,\n  onBlur,\n  stateClass,\n  focus,\n  blur,\n  forceUpdateKey,\n} = useFormInput(props, input, modelValue, modelModifiers)\n\nconst computedClasses = computed(() => {\n  const isRange = props.type === 'range'\n  const isColor = props.type === 'color'\n  return [\n    stateClass.value,\n    {\n      'form-range': isRange,\n      'form-control': isColor || (!props.plaintext && !isRange),\n      'form-control-color': isColor,\n      'form-control-plaintext': props.plaintext && !isRange && !isColor,\n      [`form-control-${props.size}`]: !!props.size,\n    },\n  ]\n})\n\ndefineExpose({\n  blur,\n  element: input,\n  focus,\n})\n</script>\n"],
  "mappings": "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",
  "names": ["timer", "_a", "_useModel"]
}
