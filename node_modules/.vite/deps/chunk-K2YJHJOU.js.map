{
  "version": 3,
  "sources": ["../../bootstrap-vue-next/src/components/BCollapse/BCollapse.vue"],
  "sourcesContent": ["<template>\n  <slot name=\"header\" v-bind=\"sharedSlots\" />\n  <Transition\n    v-if=\"renderRef || contentShowing\"\n    v-bind=\"transitionProps\"\n    :enter-active-class=\"computedNoAnimation ? '' : 'collapsing'\"\n    :leave-active-class=\"computedNoAnimation ? '' : 'collapsing'\"\n    :appear=\"modelValue || props.visible\"\n  >\n    <component\n      :is=\"props.tag\"\n      v-show=\"showRef\"\n      :id=\"computedId\"\n      ref=\"_element\"\n      class=\"collapse\"\n      :class=\"computedClasses\"\n      :is-nav=\"props.isNav\"\n      v-bind=\"$attrs\"\n    >\n      <slot v-if=\"contentShowing\" v-bind=\"sharedSlots\" />\n    </component>\n  </Transition>\n  <slot name=\"footer\" v-bind=\"sharedSlots\" />\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, type EmitFn, provide, readonly, toRef, useTemplateRef} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport {collapseInjectionKey} from '../../utils/keys'\nimport type {BCollapseProps} from '../../types/ComponentProps'\nimport type {BCollapseEmits} from '../../types/ComponentEmits'\nimport type {BCollapseSlots, ShowHideSlotsData} from '../../types/ComponentSlots'\nimport {useShowHide} from '../../composables/useShowHide'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst _props = withDefaults(defineProps<Omit<BCollapseProps, 'modelValue'>>(), {\n  horizontal: false,\n  id: undefined,\n  initialAnimation: false,\n  isNav: false,\n  lazy: false,\n  noAnimation: false,\n  unmountLazy: false,\n  tag: 'div',\n  show: false,\n  visible: false,\n})\n\nconst props = useDefaults(_props, 'BCollapse')\n\nconst emit = defineEmits<BCollapseEmits>()\n\ndefineSlots<BCollapseSlots>()\n\nconst modelValue = defineModel<Exclude<BCollapseProps['modelValue'], undefined>>({\n  default: false,\n})\n\nconst computedId = useId(() => props.id, 'collapse')\n\nconst element = useTemplateRef<HTMLElement>('_element')\n\nlet inCollapse = false\nconst onEnter = (el: Element) => {\n  inCollapse = true\n  requestAnimationFrame(() => {\n    if (props.horizontal) {\n      ;(el as HTMLElement).style.width = `${(el as HTMLElement).scrollWidth}px`\n    } else {\n      ;(el as HTMLElement).style.height = `${(el as HTMLElement).scrollHeight}px`\n    }\n  })\n}\nconst onBeforeLeave = (el: Element) => {\n  if (inCollapse) {\n    return\n  }\n  if (props.horizontal) {\n    ;(el as HTMLElement).style.width = `${el.scrollWidth}px`\n  } else {\n    ;(el as HTMLElement).style.height = `${el.scrollHeight}px`\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n  ;(el as HTMLElement).offsetHeight // force reflow\n}\nconst onLeave = (el: Element) => {\n  requestAnimationFrame(() => {\n    if (props.horizontal) {\n      ;(el as HTMLElement).style.width = ``\n    } else {\n      ;(el as HTMLElement).style.height = ``\n    }\n  })\n}\n\nconst onAfterEnter = (el: Element) => {\n  ;(el as HTMLElement).style.height = ``\n  ;(el as HTMLElement).style.width = ``\n  inCollapse = false\n}\n\nconst onAfterLeave = (el: Element) => {\n  ;(el as HTMLElement).style.height = ``\n  ;(el as HTMLElement).style.width = ``\n  inCollapse = false\n}\n\nconst {\n  showRef,\n  renderRef,\n  hide,\n  show,\n  toggle,\n  isActive,\n  computedNoAnimation,\n  contentShowing,\n  transitionProps,\n} = useShowHide(modelValue, props, emit as EmitFn, element, computedId, {\n  // addShowClass: false,\n  transitionProps: {\n    onBeforeLeave,\n    onEnter,\n    onLeave,\n    onAfterEnter,\n    onAfterLeave,\n    enterToClass: '',\n    leaveToClass: '',\n    enterFromClass: '',\n    leaveFromClass: '',\n    enterActiveClass: '',\n    leaveActiveClass: '',\n  },\n})\n\nconst computedClasses = computed(() => ({\n  'show': isActive.value,\n  'navbar-collapse': props.isNav,\n  'collapse-horizontal': props.horizontal,\n}))\n\nconst sharedSlots = computed<ShowHideSlotsData>(() => ({\n  toggle,\n  show,\n  hide,\n  id: computedId.value,\n  visible: showRef.value,\n  active: isActive.value,\n}))\n\ndefineExpose({\n  hide,\n  isNav: props.isNav,\n  show,\n  toggle,\n  visible: readonly(showRef),\n})\n\nprovide(collapseInjectionKey, {\n  id: computedId,\n  hide,\n  show,\n  toggle,\n  visible: readonly(showRef),\n  isNav: toRef(() => props.isNav),\n})\n</script>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,UAAM,SAAS;AAaT,UAAA,QAAQ,YAAY,QAAQ,WAAW;AAE7C,UAAM,OAAO;AAIP,UAAA,aAAaA,SAElB,SAAA,YAAA;AAED,UAAM,aAAa,MAAM,MAAM,MAAM,IAAI,UAAU;AAE7C,UAAA,UAAU,eAA4B,UAAU;AAEtD,QAAI,aAAa;AACX,UAAA,UAAU,CAAC,OAAgB;AAClB,mBAAA;AACb,4BAAsB,MAAM;AAC1B,YAAI,MAAM,YAAY;AAClB,aAAmB,MAAM,QAAQ,GAAI,GAAmB,WAAW;QAAA,OAChE;AACH,aAAmB,MAAM,SAAS,GAAI,GAAmB,YAAY;QAAA;MACzE,CACD;IACH;AACM,UAAA,gBAAgB,CAAC,OAAgB;AACrC,UAAI,YAAY;AACd;MAAA;AAEF,UAAI,MAAM,YAAY;AAClB,WAAmB,MAAM,QAAQ,GAAG,GAAG,WAAW;MAAA,OAC/C;AACH,WAAmB,MAAM,SAAS,GAAG,GAAG,YAAY;MAAA;AAGtD,SAAmB;IACvB;AACM,UAAA,UAAU,CAAC,OAAgB;AAC/B,4BAAsB,MAAM;AAC1B,YAAI,MAAM,YAAY;AAClB,aAAmB,MAAM,QAAQ;QAAA,OAC9B;AACH,aAAmB,MAAM,SAAS;QAAA;MACtC,CACD;IACH;AAEM,UAAA,eAAe,CAAC,OAAgB;AAClC,SAAmB,MAAM,SAAS;AAClC,SAAmB,MAAM,QAAQ;AACtB,mBAAA;IACf;AAEM,UAAA,eAAe,CAAC,OAAgB;AAClC,SAAmB,MAAM,SAAS;AAClC,SAAmB,MAAM,QAAQ;AACtB,mBAAA;IACf;AAEM,UAAA;MACJ;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,IACE,YAAY,YAAY,OAAO,MAAgB,SAAS,YAAY;;MAEtE,iBAAiB;QACf;QACA;QACA;QACA;QACA;QACA,cAAc;QACd,cAAc;QACd,gBAAgB;QAChB,gBAAgB;QAChB,kBAAkB;QAClB,kBAAkB;MAAA;IACpB,CACD;AAEK,UAAA,kBAAkB,SAAS,OAAO;MACtC,QAAQ,SAAS;MACjB,mBAAmB,MAAM;MACzB,uBAAuB,MAAM;IAAA,EAC7B;AAEI,UAAA,cAAc,SAA4B,OAAO;MACrD;MACA;MACA;MACA,IAAI,WAAW;MACf,SAAS,QAAQ;MACjB,QAAQ,SAAS;IAAA,EACjB;AAEW,aAAA;MACX;MACA,OAAO,MAAM;MACb;MACA;MACA,SAAS,SAAS,OAAO;IAAA,CAC1B;AAED,YAAQ,sBAAsB;MAC5B,IAAI;MACJ;MACA;MACA;MACA,SAAS,SAAS,OAAO;MACzB,OAAO,MAAM,MAAM,MAAM,KAAK;IAAA,CAC/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "names": ["_useModel"]
}
