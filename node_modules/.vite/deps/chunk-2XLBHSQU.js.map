{
  "version": 3,
  "sources": ["../../bootstrap-vue-next/src/composables/useContainerClasses.ts", "../../bootstrap-vue-next/src/components/BNavbar/BNavbar.vue", "../../bootstrap-vue-next/src/components/BNavbar/BNavbarBrand.vue", "../../bootstrap-vue-next/src/components/BNavbar/BNavbarNav.vue", "../../bootstrap-vue-next/src/components/BNavbar/BNavbarToggle.vue"],
  "sourcesContent": ["import type {Breakpoint} from '../types/BreakpointProps'\nimport {computed, type MaybeRefOrGetter, toValue} from 'vue'\n\nexport const useContainerClasses = (value: MaybeRefOrGetter<boolean | Breakpoint | 'fluid'>) =>\n  computed(() => {\n    const resolvedValue = toValue(value)\n    return {\n      container: resolvedValue === true,\n      [`container-${resolvedValue}`]: typeof resolvedValue === 'string',\n    }\n  })\n", "<template>\n  <component :is=\"props.tag\" class=\"navbar\" :class=\"computedClasses\" :role=\"computedRole\">\n    <div v-if=\"props.container !== false\" :class=\"containerClass\">\n      <slot />\n    </div>\n    <slot v-else />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, provide, toRef} from 'vue'\nimport type {BNavbarProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useContainerClasses} from '../../composables/useContainerClasses'\nimport {navbarInjectionKey} from '../../utils/keys'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\n\nconst _props = withDefaults(defineProps<BNavbarProps>(), {\n  autoClose: true,\n  container: 'fluid',\n  fixed: undefined,\n  print: false,\n  sticky: undefined,\n  tag: 'nav',\n  toggleable: false,\n  variant: null,\n})\nconst props = useDefaults(_props, 'BNavbar')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst computedRole = computed(() => (props.tag === 'nav' ? undefined : 'navigation'))\n\nconst containerClass = useContainerClasses(() => props.container)\n\nconst colorClasses = useColorVariantClasses(\n  computed(() => ({\n    bgVariant: props.variant,\n  }))\n)\nconst computedClasses = computed(() => [\n  colorClasses.value,\n  {\n    'd-print': props.print,\n    [`sticky-${props.sticky}`]: props.sticky !== undefined,\n    [`fixed-${props.fixed}`]: props.fixed !== undefined,\n    'navbar-expand': props.toggleable === false,\n    [`navbar-expand-${props.toggleable}`]: typeof props.toggleable === 'string',\n  },\n])\n\nprovide(navbarInjectionKey, {\n  tag: toRef(() => props.tag),\n  autoClose: toRef(() => props.autoClose),\n})\n</script>\n", "<template>\n  <component :is=\"computedTag\" class=\"navbar-brand\" v-bind=\"computedLinkProps\">\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport BLink from '../BLink/BLink.vue'\nimport type {BNavbarBrandProps} from '../../types/ComponentProps'\nimport {useBLinkHelper} from '../../composables/useBLinkHelper'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {computed} from 'vue'\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst _props = withDefaults(defineProps<BNavbarBrandProps>(), {\n  tag: 'div',\n  // Link props\n  active: undefined,\n  activeClass: undefined,\n  disabled: undefined,\n  exactActiveClass: undefined,\n  href: undefined,\n  stretched: false,\n  icon: undefined,\n  opacity: undefined,\n  opacityHover: undefined,\n  rel: undefined,\n  replace: undefined,\n  routerComponentName: undefined,\n  target: undefined,\n  to: undefined,\n  underlineOffset: undefined,\n  underlineOffsetHover: undefined,\n  underlineOpacity: undefined,\n  underlineOpacityHover: undefined,\n  underlineVariant: undefined,\n  variant: undefined,\n  // End link props\n})\nconst props = useDefaults(_props, 'BNavbarBrand')\n\nconst {computedLink, computedLinkProps} = useBLinkHelper(props, [\n  'active',\n  'activeClass',\n  'append',\n  'disabled',\n  'href',\n  'rel',\n  'replace',\n  'routerComponentName',\n  'target',\n  'to',\n  'variant',\n  'opacity',\n  'opacityHover',\n  'underlineVariant',\n  'underlineOffset',\n  'underlineOffsetHover',\n  'underlineOpacity',\n  'underlineOpacityHover',\n  'icon',\n])\n\nconst computedTag = computed(() => (computedLink.value ? BLink : props.tag))\n</script>\n", "<template>\n  <ul class=\"navbar-nav\" :class=\"computedClasses\">\n    <slot />\n  </ul>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BNavbarNavProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\nimport {useAlignment} from '../../composables/useAlignment'\nimport {useDefaults} from '../../composables/useDefaults'\n\nconst _props = withDefaults(defineProps<BNavbarNavProps>(), {\n  align: undefined,\n  fill: false,\n  justified: false,\n  small: false,\n  tag: 'ul',\n})\nconst props = useDefaults(_props, 'BNavbarNav')\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default?: (props: Record<string, never>) => any\n}>()\n\nconst alignment = useAlignment(() => props.align)\n\nconst computedClasses = computed(() => ({\n  'nav-fill': props.fill,\n  'nav-justified': props.justified,\n  [alignment.value]: props.align !== undefined,\n  'small': props.small,\n}))\n</script>\n", "<template>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    :class=\"computedClasses\"\n    :disabled=\"props.disabled\"\n    :aria-label=\"props.label\"\n    @click=\"onClick\"\n  >\n    <slot :expanded=\"collapseExpanded\">\n      <span class=\"navbar-toggler-icon\" />\n    </slot>\n  </button>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BNavbarToggleProps} from '../../types/ComponentProps'\nimport {computed, inject, toValue} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {globalShowHideStorageInjectionKey} from '../../utils/keys'\n\nconst _props = withDefaults(defineProps<BNavbarToggleProps>(), {\n  label: 'Toggle navigation',\n  disabled: false,\n  target: undefined,\n})\nconst props = useDefaults(_props, 'BNavbarToggle')\n\nconst emit = defineEmits<{\n  click: [value: MouseEvent]\n}>()\n\ndefineSlots<{\n  default?: (props: {\n    expanded: boolean\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  }) => any\n}>()\n\nconst computedClasses = computed(() => ({\n  disabled: props.disabled,\n}))\n\nconst showHideData = inject(globalShowHideStorageInjectionKey, undefined)\n\nconst collapseExpanded = computed(() => {\n  if (!props.target || !showHideData) return false\n  if (typeof props.target === 'string')\n    return toValue(toValue(showHideData.values.value.get(props.target))?.value) || false\n  return props.target.some((target) => toValue(showHideData.values.value.get(target)?.value))\n})\nconst toggleExpand = () => {\n  if (!props.target || !showHideData) return\n  if (typeof props.target === 'string') {\n    toValue(showHideData.values.value.get(props.target))?.toggle()\n    return\n  }\n  props.target.forEach((target) => toValue(showHideData.values.value.get(target))?.toggle())\n}\n\nconst onClick = (e: Readonly<MouseEvent>): void => {\n  if (!props.disabled) {\n    emit('click', e)\n    toggleExpand()\n  }\n}\n</script>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,IAAM,sBAAsB,CAAC,UAClC,SAAS,MAAM;AACP,QAAA,gBAAgB,QAAQ,KAAK;AAC5B,SAAA;IACL,WAAW,kBAAkB;IAC7B,CAAC,aAAa,aAAa,EAAE,GAAG,OAAO,kBAAkB;EAC3D;AACF,CAAC;;;;;;;;;;;;;;ACOH,UAAM,SAAS;AAUT,UAAA,QAAQ,YAAY,QAAQ,SAAS;AAO3C,UAAM,eAAe,SAAS,MAAO,MAAM,QAAQ,QAAQ,SAAY,YAAa;AAEpF,UAAM,iBAAiB,oBAAoB,MAAM,MAAM,SAAS;AAEhE,UAAM,eAAe;MACnB,SAAS,OAAO;QACd,WAAW,MAAM;MAAA,EACjB;IACJ;AACM,UAAA,kBAAkB,SAAS,MAAM;MACrC,aAAa;MACb;QACE,WAAW,MAAM;QACjB,CAAC,UAAU,MAAM,MAAM,EAAE,GAAG,MAAM,WAAW;QAC7C,CAAC,SAAS,MAAM,KAAK,EAAE,GAAG,MAAM,UAAU;QAC1C,iBAAiB,MAAM,eAAe;QACtC,CAAC,iBAAiB,MAAM,UAAU,EAAE,GAAG,OAAO,MAAM,eAAe;MAAA;IACrE,CACD;AAED,YAAQ,oBAAoB;MAC1B,KAAK,MAAM,MAAM,MAAM,GAAG;MAC1B,WAAW,MAAM,MAAM,MAAM,SAAS;IAAA,CACvC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCD,UAAM,SAAS;AAyBT,UAAA,QAAQ,YAAY,QAAQ,cAAc;AAEhD,UAAM,EAAC,cAAc,kBAAA,IAAqB,eAAe,OAAO;MAC9D;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA,CACD;AAED,UAAM,cAAc,SAAS,MAAO,aAAa,QAAQA,YAAQ,MAAM,GAAI;;;;;;;;;;;;;;;;;;;;;ACvD3E,UAAM,SAAS;AAOT,UAAA,QAAQ,YAAY,QAAQ,YAAY;AAO9C,UAAM,YAAY,aAAa,MAAM,MAAM,KAAK;AAE1C,UAAA,kBAAkB,SAAS,OAAO;MACtC,YAAY,MAAM;MAClB,iBAAiB,MAAM;MACvB,CAAC,UAAU,KAAK,GAAG,MAAM,UAAU;MACnC,SAAS,MAAM;IAAA,EACf;;;;;;;;;;;;;;;;;;;;ACZF,UAAM,SAAS;AAKT,UAAA,QAAQ,YAAY,QAAQ,eAAe;AAEjD,UAAM,OAAO;AAWP,UAAA,kBAAkB,SAAS,OAAO;MACtC,UAAU,MAAM;IAAA,EAChB;AAEI,UAAA,eAAe,OAAO,mCAAmC,MAAS;AAElE,UAAA,mBAAmB,SAAS,MAAM;;AACtC,UAAI,CAAC,MAAM,UAAU,CAAC,aAAqB,QAAA;AACvC,UAAA,OAAO,MAAM,WAAW;AACnB,eAAA,SAAQ,KAAA,QAAQ,aAAa,OAAO,MAAM,IAAI,MAAM,MAAM,CAAC,MAAnD,OAAA,SAAA,GAAsD,KAAK,KAAK;AACjF,aAAO,MAAM,OAAO,KAAK,CAAC,WAAW;;AAAA,eAAA,SAAQC,MAAA,aAAa,OAAO,MAAM,IAAI,MAAM,MAApC,OAAA,SAAAA,IAAuC,KAAK;MAAA,CAAC;IAAA,CAC3F;AACD,UAAM,eAAe,MAAM;;AACzB,UAAI,CAAC,MAAM,UAAU,CAAC,aAAc;AAChC,UAAA,OAAO,MAAM,WAAW,UAAU;AAC5B,SAAA,KAAA,QAAA,aAAa,OAAO,MAAM,IAAI,MAAM,MAAM,CAAC,MAA3C,OAAA,SAAA,GAA8C,OAAA;AACtD;MAAA;AAEF,YAAM,OAAO,QAAQ,CAAC,WAAW;;AAAA,gBAAAA,MAAA,QAAQ,aAAa,OAAO,MAAM,IAAI,MAAM,CAAC,MAA7C,OAAA,SAAAA,IAAgD,OAAA;MAAA,CAAQ;IAC3F;AAEM,UAAA,UAAU,CAAC,MAAkC;AAC7C,UAAA,CAAC,MAAM,UAAU;AACnB,aAAK,SAAS,CAAC;AACF,qBAAA;MAAA;IAEjB;;;;;;;;;;;;;;;;",
  "names": ["BLink", "_a"]
}
