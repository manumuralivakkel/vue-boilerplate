{
  "version": 3,
  "sources": ["../../bootstrap-vue-next/src/utils/dom.ts", "../../bootstrap-vue-next/src/components/BSpinner/BSpinner.vue", "../../bootstrap-vue-next/src/components/BButton/BButton.vue"],
  "sourcesContent": ["import type {Slot} from 'vue'\n\n// Get the currently active HTML element\nexport const getActiveElement = (excludes: readonly HTMLElement[] = []): Element | null => {\n  const {activeElement} = document\n  return activeElement && !excludes?.some((el) => el === activeElement) ? activeElement : null\n}\n\n/**\n * @deprecated only used in BFormGroup, which is not an SFC... Function could probably be replaced with pure Vue\n */\nexport const attemptFocus = (\n  el: Readonly<HTMLElement>,\n  options: Readonly<FocusOptions> = {}\n): boolean => {\n  const isActiveElement = (el: Readonly<HTMLElement>): boolean => el === getActiveElement()\n\n  try {\n    el.focus(options)\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(e)\n  }\n  return isActiveElement(el)\n}\n\nexport const isEmptySlot = (el: Slot | undefined): boolean => (el?.() ?? []).length === 0\n\n/**\n * @deprecated only used in BFormGroup, which is not an SFC... Function could probably be replaced with pure Vue\n */\nexport const isVisible = (el: Readonly<Element>): boolean => {\n  //if (!isElement(el) || !el.parentNode || !contains(DOCUMENT.body, el)) {\n  // Note this can fail for shadow dom elements since they\n  // are not a direct descendant of document.body\n  //return false\n  //}\n  if (el.getAttribute('display') === 'none') {\n    // We do this check to help with vue-test-utils when using v-show\n    return false\n  }\n  // All browsers support getBoundingClientRect(), except JSDOM as it returns all 0's for values :(\n  // So any tests that need isVisible will fail in JSDOM\n  // Except when we override the getBCR prototype in some tests\n  const bcr = el.getBoundingClientRect()\n  return !!(bcr && bcr.height > 0 && bcr.width > 0)\n}\n\nexport const getTransitionDelay = (element: Readonly<HTMLElement>) => {\n  const style = window.getComputedStyle(element)\n  // if multiple durations are defined, we take the first\n  const transitionDelay = style.transitionDelay.split(',')[0] || ''\n  const transitionDuration = style.transitionDuration.split(',')[0] || ''\n  const transitionDelayMs = Number(transitionDelay.slice(0, -1)) * 1000\n  const transitionDurationMs = Number(transitionDuration.slice(0, -1)) * 1000\n  return transitionDelayMs + transitionDurationMs\n}\n\nexport const sortSlotElementsByPosition = (\n  a: Readonly<HTMLElement> | null,\n  b: Readonly<HTMLElement> | null\n): number => {\n  if (typeof Node === 'undefined' || !Node || !a || !b) return 0\n  const position = a.compareDocumentPosition(b)\n  if (position & Node.DOCUMENT_POSITION_FOLLOWING) return -1\n  if (position & Node.DOCUMENT_POSITION_PRECEDING) return 1\n  return 0\n}\n\nexport const getModalZIndex = (element?: Readonly<HTMLElement | null>): number => {\n  if (typeof window === 'undefined') return 1055\n  const target = element ?? document.body\n  const raw = window.getComputedStyle(target).getPropertyValue('--bs-modal-zindex').trim()\n  const parsed = Number.parseInt(raw, 10)\n  return Number.isFinite(parsed) ? parsed : 1055\n}\n", "<template>\n  <component\n    :is=\"props.tag\"\n    :class=\"computedClasses\"\n    :role=\"props.label || hasLabelSlot ? props.role : null\"\n    :aria-hidden=\"props.label || hasLabelSlot ? null : true\"\n  >\n    <span v-if=\"props.label || hasLabelSlot\" class=\"visually-hidden\">\n      <slot name=\"label\">{{ props.label }}</slot>\n    </span>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed} from 'vue'\nimport type {BSpinnerProps} from '../../types/ComponentProps'\nimport {isEmptySlot} from '../../utils/dom'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\n\nconst _props = withDefaults(defineProps<BSpinnerProps>(), {\n  label: undefined,\n  role: 'status',\n  small: false,\n  tag: 'span',\n  type: 'border',\n  variant: null,\n})\n\nconst props = useDefaults(_props, 'BSpinner')\n\nconst slots = defineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  label?: (props: Record<string, never>) => any\n}>()\n\nconst colorClasses = useColorVariantClasses(\n  computed(() => ({\n    textVariant: props.variant,\n  }))\n)\nconst computedClasses = computed(() => [\n  `spinner-${props.type}`,\n  colorClasses.value,\n  {\n    [`spinner-${props.type}-sm`]: props.small,\n  },\n])\n\nconst hasLabelSlot = computed(() => !isEmptySlot(slots.label))\n</script>\n", "<template>\n  <component\n    :is=\"computedTag\"\n    ref=\"_element\"\n    class=\"btn\"\n    v-bind=\"linkProps\"\n    :class=\"computedClasses\"\n    :aria-disabled=\"computedAriaDisabled\"\n    :aria-pressed=\"isToggle ? pressedValue : null\"\n    :autocomplete=\"isToggle ? 'off' : null\"\n    :disabled=\"isButton ? props.disabled : null\"\n    :href=\"props.href\"\n    :rel=\"computedLink ? props.rel : null\"\n    :role=\"nonStandardTag || computedLink ? 'button' : null\"\n    :target=\"computedLink ? props.target : null\"\n    :type=\"isButton ? props.type : null\"\n    :to=\"!isButton ? props.to : null\"\n    @click=\"clicked\"\n  >\n    <slot v-if=\"props.loading\" name=\"loading\">\n      <template v-if=\"!props.loadingFill\">\n        {{ props.loadingText }}\n      </template>\n      <slot name=\"loading-spinner\">\n        <BSpinner\n          :small=\"props.size !== 'lg'\"\n          :label=\"props.loadingFill ? props.loadingText : undefined\"\n        />\n      </slot>\n    </slot>\n    <slot v-else />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, useTemplateRef} from 'vue'\nimport BSpinner from '../BSpinner/BSpinner.vue'\nimport {useBLinkHelper} from '../../composables/useBLinkHelper'\nimport BLink from '../BLink/BLink.vue'\nimport {useLinkClasses} from '../../composables/useLinkClasses'\nimport {onKeyStroke} from '@vueuse/core'\nimport type {BButtonProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {ColorVariant} from '../../types/ColorTypes'\n\ndefineSlots<{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'default'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'loading'?: (props: Record<string, never>) => any\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  'loading-spinner'?: (props: Record<string, never>) => any\n}>()\n\nconst _props = withDefaults(defineProps<Omit<BButtonProps, 'pressed'>>(), {\n  loading: false,\n  loadingFill: false,\n  loadingText: 'Loading...',\n  pill: false,\n  size: 'md',\n  squared: false,\n  tag: 'button',\n  type: 'button',\n  // Link props\n  active: false, // Why is this active: false?\n  variant: 'secondary',\n  // All others use defaults\n  activeClass: undefined,\n  disabled: undefined,\n  exactActiveClass: undefined,\n  stretched: false,\n  href: undefined,\n  icon: false,\n  opacity: undefined,\n  opacityHover: undefined,\n  rel: undefined,\n  replace: undefined,\n  routerComponentName: undefined,\n  routerTag: undefined,\n  target: undefined,\n  to: undefined,\n  underlineOffset: undefined,\n  underlineOffsetHover: undefined,\n  underlineOpacity: undefined,\n  underlineOpacityHover: undefined,\n  underlineVariant: null,\n  // End link props\n})\n\nconst props = useDefaults(_props, 'BButton')\n\nconst emit = defineEmits<{\n  click: [value: MouseEvent]\n}>()\n\nconst element = useTemplateRef<HTMLElement>('_element')\n\nconst pressedValue = defineModel<BButtonProps['pressed']>('pressed', {default: undefined})\n\nconst {computedLink, computedLinkProps} = useBLinkHelper(props, [\n  'active-class',\n  'exact-active-class',\n  'replace',\n  'routerComponentName',\n  'routerTag',\n])\n\nconst isToggle = computed(() => typeof pressedValue.value === 'boolean')\nconst isButton = computed(\n  () => props.tag === 'button' && props.href === undefined && props.to === undefined\n)\nconst isBLink = computed(() => props.to !== undefined)\nconst nonStandardTag = computed(() => (props.href !== undefined ? false : !isButton.value))\n\nconst linkProps = computed(() => (isBLink.value ? computedLinkProps.value : []))\nconst computedAriaDisabled = computed(() => {\n  if (props.href === '#' && props.disabled) return true\n\n  return nonStandardTag.value ? props.disabled : null\n})\n\nconst variantIsLinkType = computed(() => props.variant?.startsWith('link') || false)\nconst variantIsLinkTypeSubset = computed(() => props.variant?.startsWith('link-') || false)\nconst linkValueClasses = useLinkClasses(\n  computed(() => ({\n    ...(variantIsLinkType.value\n      ? {\n          icon: props.icon,\n          opacity: props.opacity,\n          opacityHover: props.opacityHover,\n          underlineOffset: props.underlineOffset,\n          underlineOffsetHover: props.underlineOffsetHover,\n          underlineOpacity: props.underlineOpacity,\n          underlineOpacityHover: props.underlineOpacityHover,\n          underlineVariant: props.underlineVariant,\n          variant:\n            variantIsLinkTypeSubset.value === true\n              ? (props.variant?.slice(5) as ColorVariant)\n              : null,\n        }\n      : undefined),\n  }))\n)\nconst computedClasses = computed(() => [\n  variantIsLinkType.value === true && computedLink.value === false\n    ? linkValueClasses.value\n    : undefined,\n  [`btn-${props.size}`],\n  {\n    [`btn-${props.variant}`]: props.variant !== null && variantIsLinkTypeSubset.value === false,\n    'active': props.active || pressedValue.value,\n    'rounded-pill': props.pill,\n    'rounded-0': props.squared,\n    'disabled': props.disabled,\n  },\n])\n\nconst computedTag = computed(() => (isBLink.value ? BLink : props.href ? 'a' : props.tag))\n\nconst clicked = (e: Readonly<MouseEvent>): void => {\n  if (props.disabled) {\n    e.preventDefault()\n    e.stopPropagation()\n    return\n  }\n  emit('click', e)\n  if (isToggle.value) pressedValue.value = !pressedValue.value\n}\n\nonKeyStroke(\n  [' ', 'enter'],\n  (e) => {\n    if (props.href === '#') {\n      e.preventDefault()\n      element.value?.click()\n    }\n  },\n  {target: element}\n)\n</script>\n"],
  "mappings": "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",
  "names": ["el", "_useSlots", "_useModel", "BLink"]
}
